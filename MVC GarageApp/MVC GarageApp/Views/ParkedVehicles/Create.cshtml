@*@model MVC_GarageApp.Models.ParkedVehicle*@
@model MVC_GarageApp.Models.ViewModel.MemberVehType

@{
    ViewBag.Title = "ParkVehicle";
}

<h2>Park a vehicle</h2>
@DateTime.Now.ToString("dddd, dd MMMM yyyy")<br /><br />

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Owner, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.MemberId, (SelectList)ViewBag.MemberIdList, new { htmlAttributes = new { @class = "form-control", @placeholder = "Vehicle Type" } })
                @Html.ValidationMessageFor(model => model.MemberId, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.VehicleTypeId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.VehicleTypeId, (SelectList)ViewBag.VehicleTypeIdList, new { htmlAttributes = new { @class = "form-control", @placeholder = "Vehicle Type" } })
                @Html.ValidationMessageFor(model => model.VehicleTypeId, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.RegistrationNumber, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.RegistrationNumber, new { htmlAttributes = new { @class = "form-control", @placeholder="Registration number"} })
                @Html.ValidationMessageFor(model => model.RegistrationNumber, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Color, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Color, new { htmlAttributes = new { @class = "form-control",@placeholder="Color" } })
                @Html.ValidationMessageFor(model => model.Color, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Brand, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Brand, new { htmlAttributes = new { @class = "form-control",@placeholder="Brand" } })
                @Html.ValidationMessageFor(model => model.Brand, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Model, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Model, new { htmlAttributes = new { @class = "form-control",@placeholder="Model" } })
                @Html.ValidationMessageFor(model => model.Model, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.NumberOfWheels, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NumberOfWheels, new { htmlAttributes = new { @class = "form-control",@placeholder="Number Of Wheels" } })
                @Html.ValidationMessageFor(model => model.NumberOfWheels, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <button class="btn btn-info" type="submit" value="Create">Park</button>
                 @Html.ActionLink("Back to List", "Index", new { @class = "btn btn-info" })
             </div>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
