@model IPagedList<ParkedVehicleVM>

@{
    ViewBag.Title = "Index";
}

<h2>Garage</h2>

<div class="row">
    <button class="btn btn-default">@Html.ActionLink("Park New", "Create")</button>
</div>
 <br />
<div class="jumbotron">
    
        @using (Html.BeginForm("Index", "ParkedVehicles", FormMethod.Get))
        {
            <p>
                Search By:<br />

                @Html.RadioButton("SearchBy", "RegistrationNumber", true)<text>RegistrationNumber&nbsp;</text>
                @Html.RadioButton("SearchBy", "Type")<text>Type&nbsp;</text>
                @Html.RadioButton("SearchBy", "Brand")<text>Brand&nbsp;</text>
                @Html.RadioButton("SearchBy", "Model")<text>Model&nbsp;</text>
                @Html.RadioButton("SearchBy", "Color")<text>Color&nbsp;</text>
                @Html.RadioButton("SearchBy", "NumberOfWheels")<text>NumberOfWheels&nbsp;</text>
                @Html.RadioButton("SearchBy", "CheckIn")<text>CheckIn&nbsp;</text>
                @Html.TextBox("search", null, new { @class = "form-control", placeholder = "Search for..." })<input type="submit" value="Search" class="btn btn-info" />
            </p>
        }
    <br />
</div>
<table class="table table-hover table-responsive table-striped">
    <tr>
        <th>
            @Html.ActionLink("Type", "Index", new { sortBy = ViewBag.SortTypeParameter, searchBy= Request.QueryString["searchBy"], search= Request["search"]})
        </th>
        <th>
            @Html.ActionLink("RegistrationNumber", "Index", new { sortBy = ViewBag.SortRegistrationNumberParameter, searchBy = Request.QueryString["searchBy"], search = Request["search"] })
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().Color)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().Brand)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().Model)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.First().NumberOfWheels)
        </th>
        <th>
           @Html.DisplayNameFor(model => model.First().CheckIn) 
        </th>
        <th></th>
    </tr>
    @if (Model.Count() == 0)
    {
        <tr>
            <td colspan="7">We are sorry No rows match search critiria. Please try again.</td>
        </tr>
    }
    else
    {
        foreach (var item in Model)
        {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Type)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.RegistrationNumber)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Color)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Brand)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Model)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.NumberOfWheels)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CheckIn)
                
            </td>
            <td>
                <button class="btn btn-default">@Html.ActionLink("Edit", "Edit", new { id = item.Id })</button>
                <button class="btn btn-default">@Html.ActionLink("Details", "Details", new { id = item.Id })</button>
                <button class="btn btn-default">@Html.ActionLink("Unpark", "Delete", new { id = item.Id })</button>
            </td>
        </tr>
    }
    }
</table>
<div class="row">
    <div class="text-center">
        @Html.PagedListPager(Model, Page => Url.Action("Index", new { Page, searchBy = Request.QueryString["searchBy"], search = Request.QueryString["search"]}),
       new PagedListRenderOptions() { Display = PagedListDisplayMode.IfNeeded, DisplayPageCountAndCurrentLocation = true})    
     </div>
</div>